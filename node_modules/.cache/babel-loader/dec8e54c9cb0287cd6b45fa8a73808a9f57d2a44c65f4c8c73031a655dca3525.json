{"ast":null,"code":"var _jsxFileName = \"/Users/billmcconnell/Documents/MITxPro/github/build-a-formik-form/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values => {\n      alert('Login Successful');\n    },\n    validate: values => {\n      let errors = {};\n      if (!values.email) {\n        errors.email = 'Field required';\n        if (!values.password) errors.password = 'Field required';\n      }\n      return errors;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The app is ready! You can proceed with the task instructions. TODO: build your form here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"email\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"password\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        value: formik.values.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 35\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useFormik","jsxDEV","_jsxDEV","App","_s","formik","initialValues","email","password","onSubmit","values","alert","validate","errors","children","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","name","type","onChange","handleChange","value","style","color","_c","$RefreshReg$"],"sources":["/Users/billmcconnell/Documents/MITxPro/github/build-a-formik-form/src/App.js"],"sourcesContent":["import React from \"react\";\n// TODO: import useFormik from formik library\nimport { useFormik } from \"formik\";\n\nfunction App() {\n  // TODO: add a const called formik assigned to useFormik()\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: ''\n    },\n    onSubmit: values =>{\n      alert('Login Successful');\n    },\n    validate: values =>{\n      let errors = {};\n      if (!values.email) {\n        errors.email = 'Field required';\n        if(!values.password) errors.password = 'Field required';\n      }\n      return errors;\n    }\n  });\n\n  return (\n    <div>\n      <p>\n        The app is ready! You can proceed with the task instructions. TODO:\n        build your form here.\n      </p>\n      <form onSubmit={formik.handleSubmit}>\n        <div>email</div>\n        <input name=\"email\" type=\"text\" onChange={formik.handleChange} value={formik.values.email}/>\n        {formik.errors.email ? <div style={{color: 'red'}}>{formik.errors.email}</div>: null}\n        <div>password</div>\n        <input name=\"password\" type=\"text\" onChange={formik.handleChange} value={formik.values.password}/>\n        {formik.errors.password ? <div style={{color: 'red'}}>{formik.errors.password}</div>: null}\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}